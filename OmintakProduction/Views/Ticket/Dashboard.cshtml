@model IEnumerable<OmintakProduction.Models.Ticket>
@{
    ViewData["Title"] = "Ticket Management Dashboard";
    var statusGroups = Model.GroupBy(t => t.Status ?? "To Do");
}

<!-- Add drag and drop JavaScript -->
<script src="~/js/dragdrop.js"></script>

<div class="ms-page-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="ms-page-title">
                <i class="fas fa-ticket-alt me-2"></i>Ticket Management
            </h1>
            <p class="ms-page-subtitle">Manage and track your tickets with drag and drop functionality</p>
        </div>
        <a href="@Url.Action("Create", "Ticket")" class="ms-btn ms-btn-primary">
            <i class="fas fa-plus me-1"></i> Create Ticket
        </a>
    </div>
</div>

<div class="kanban-board">
    @foreach (var group in statusGroups)
    {
        <div class="kanban-column drop-zone" data-status="@group.Key">
            <div class="kanban-column-header">
                <h5 class="mb-1">@group.Key</h5>
                <span class="ms-badge ms-badge-primary">@group.Count() tickets</span>
            </div>
            <div class="kanban-items">
                @foreach (var ticket in group)
                {
                    <div class="kanban-item draggable ms-card ms-card-@(GetCardColorClass(ticket.Priority.ToString()))" 
                         data-id="@ticket.Id" 
                         data-type="ticket" 
                         data-status="@ticket.Status" 
                         data-priority="@ticket.Priority.ToString()"
                         draggable="true">
                        <div class="kanban-item-title">@ticket.Title</div>
                        <div class="kanban-item-description">
                            <p class="mb-2">@ticket.Description</p>
                        </div>
                        <div class="kanban-item-details">
                            <div class="mb-2">
                                <i class="fas fa-user me-1"></i>
                                <strong>Assigned:</strong> 
                                @if (ticket.AssignedToUser != null)
                                {
                                    <span>@ticket.AssignedToUser.UserName</span>
                                }
                                else
                                {
                                    <span class="text-muted">Unassigned</span>
                                }
                            </div>
                            <div class="mb-2">
                                <i class="fas fa-project-diagram me-1"></i>
                                <strong>Project:</strong> @ticket.ProjectId
                            </div>
                            @if (ticket.AssignedToUser?.Team != null)
                            {
                                <div class="mb-2">
                                    <i class="fas fa-users me-1"></i>
                                    <strong>Team:</strong> @ticket.AssignedToUser.Team.TeamName
                                </div>
                            }
                        </div>
                        <div class="kanban-item-meta">
                            <div class="d-flex gap-1">
                                <span class="ms-badge ms-badge-@(GetStatusBadgeClass(ticket.Status))">@ticket.Status</span>
                                <span class="ms-badge ms-badge-@(GetPriorityBadgeClass(ticket.Priority.ToString()))">@ticket.Priority</span>
                            </div>
                            <small class="text-muted">@ticket.CreatedAt.ToString("MMM dd")</small>
                        </div>
                        <div class="mt-3">
                            <div class="d-flex gap-2">
                                <a href="@Url.Action("Manage", "Task", new { ticketId = ticket.Id })" 
                                   class="ms-btn ms-btn-secondary btn-sm flex-fill">
                                    <i class="fas fa-tasks me-1"></i> Tasks
                                </a>
                                <a href="@Url.Action("Edit", "Ticket", new { id = ticket.Id })" 
                                   class="ms-btn ms-btn-secondary btn-sm">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <form asp-action="Delete" asp-controller="Ticket" asp-route-id="@ticket.Id" 
                                      method="post" 
                                      onsubmit="return confirm('Are you sure you want to delete this ticket?');" 
                                      style="display:inline;">
                                    <button type="submit" class="ms-btn ms-btn-danger btn-sm">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@functions {
    string GetCardColorClass(string priority)
    {
        return priority?.ToLower() switch
        {
            "high" => "yellow",
            "medium" => "purple", 
            "low" => "green",
            _ => "blue"
        };
    }
    
    string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "to do" => "primary",
            "in progress" => "warning",
            "done" => "success",
            "blocked" => "danger",
            _ => "primary"
        };
    }
    
    string GetPriorityBadgeClass(string priority)
    {
        return priority?.ToLower() switch
        {
            "high" => "danger",
            "medium" => "warning",
            "low" => "success",
            _ => "primary"
        };
    }
}
                </div>
            </div>
        }
    </div>
                }
            </div>
        </div>
    }
</div>
