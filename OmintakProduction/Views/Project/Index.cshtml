@using System.Security.Claims;
@model IEnumerable<OmintakProduction.Models.Project>;
@{
    ViewData["Title"] = "Projects";
    var phases = new[] { "Active", "OnHold", "Done", "Planning" };
}

<div class="project-page">
    <div class="project-header">
        <h2 class="project-title">
            <i class="fas fa-project-diagram"></i>
            Projects Overview
        </h2>
        <div class="project-actions">
            @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
            {
                <a asp-action="Create" class="button button-primary">
                    <i class="fas fa-plus"></i>
                    New Project
                </a>
            }
            <button type="button" class="button button-secondary" id="viewToggle">
                <i class="fas fa-th-list"></i>
                Toggle View
            </button>
        </div>
    </div>

    <div class="project-stats">
        <div class="stat-card">
            <div class="stat-value">@Model.Count(p => p.Status == "Active")</div>
            <div class="stat-label">Active Projects</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Count(p => p.Status == "Planning")</div>
            <div class="stat-label">In Planning</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Count(p => p.Status == "OnHold")</div>
            <div class="stat-label">On Hold</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Count(p => p.Status == "Done")</div>
            <div class="stat-label">Completed</div>
        </div>
    </div>

    <div class="project-board">
        @foreach (var phase in phases)
        {
            var projects = Model.Where(p => p.Status == phase);
            <div class="project-column">
                <div class="project-column-header">
                    <h3 class="column-title">
                        <i class="fas fa-@(phase.ToLower() switch {
                            "active" => "play-circle",
                            "onhold" => "pause-circle",
                            "done" => "check-circle",
                            "planning" => "clock",
                            _ => "circle"
                        })"></i>
                        @phase
                        <span class="column-count">@projects.Count()</span>
                    </h3>
                </div>
                
                @foreach (var project in projects)
                {
                    <div class="project-card">
                        <div class="project-card-header">
                            <h4 class="project-card-title">@project.ProjectName</h4>
                            <span class="status status-@project.Status.ToLower()">@project.Status</span>
                        </div>
                        
                        <div class="project-card-body">
                            <p class="project-card-meta">
                                <i class="fas fa-calendar"></i>
                                Started: @project.StartDate?.ToString("MMM dd, yyyy")
                            </p>
                            
                            @if (project.Tasks?.Any() == true)
                            {
                                var completedTasks = project.Tasks.Count(t => t.Status == OmintakProduction.Models.TaskStatus.Completed);
                                var totalTasks = project.Tasks.Count;
                                var progress = totalTasks > 0 ? (completedTasks * 100) / totalTasks : 0;
                                
                                <div class="progress-bar">
                                    <div class="progress-fill" style="width: @progress%"></div>
                                </div>
                                <p class="project-card-meta">
                                    <i class="fas fa-tasks"></i>
                                    @completedTasks / @totalTasks tasks complete
                                </p>
                            }

                            @if (project.Team?.TeamMembers?.Any() == true)
                            {
                                <div class="team-members">
                                    @foreach (var member in project.Team.TeamMembers.Take(3))
                                    {
                                        <div class="member-avatar" title="@member.UserName">
                                            @(member.UserName?[0])
                                        </div>
                                    }
                                    @if (project.Team.TeamMembers.Count > 3)
                                    {
                                        <div class="member-avatar">
                                            +@(project.Team.TeamMembers.Count - 3)
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                        
                        <div class="project-card-footer">
                            <div class="button-group">
                                <a asp-action="Details" asp-route-id="@project.ProjectId" class="button button-sm">View</a>
                                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                                {
                                    <a asp-action="Edit" asp-route-id="@project.ProjectId" class="button button-sm button-secondary">Edit</a>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const viewToggle = document.getElementById('viewToggle');
            const projectBoard = document.querySelector('.project-board');
            const viewPreference = localStorage.getItem('projectViewPreference') || 'grid';
            
            // Initialize view
            setView(viewPreference);
            
            viewToggle.addEventListener('click', function() {
                const currentView = projectBoard.classList.contains('list-view') ? 'grid' : 'list';
                setView(currentView);
                localStorage.setItem('projectViewPreference', currentView);
            });
            
            function setView(viewType) {
                if (viewType === 'list') {
                    projectBoard.classList.add('list-view');
                    viewToggle.querySelector('i').classList.remove('fa-th-list');
                    viewToggle.querySelector('i').classList.add('fa-th');
                } else {
                    projectBoard.classList.remove('list-view');
                    viewToggle.querySelector('i').classList.remove('fa-th');
                    viewToggle.querySelector('i').classList.add('fa-th-list');
                }
            }
        });
    </script>
}

<style>
/* Project Overview Styles with Horizontal Scroll */
.project-page {
    background: #f8f9fa;
    min-height: 100vh;
    padding: 2rem 1rem;
}

.project-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
}

.project-title {
    font-size: 2.5rem;
    font-weight: 300;
    color: #333;
    margin: 0;
}

.project-actions {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.project-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    margin-bottom: 3rem;
}

.stat-card {
    background: linear-gradient(135deg, var(--ms-card-light-blue), #e3f2fd);
    color: var(--ms-blue);
    padding: 1.5rem;
    border-radius: var(--ms-border-radius-l);
    box-shadow: var(--ms-shadow-depth-4);
    border: 1px solid rgba(0, 123, 212, 0.1);
    text-align: center;
    transition: all 0.3s ease;
}

.stat-card:hover {
    box-shadow: var(--ms-shadow-depth-8);
    transform: translateY(-2px);
}

.stat-value {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
}

.stat-label {
    font-size: 1rem;
    opacity: 0.9;
}

/* Horizontal Scrolling Project Board */
.project-board {
    display: flex;
    gap: 2rem;
    overflow-x: auto;
    padding-bottom: 1rem;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
}

.project-board::-webkit-scrollbar {
    height: 8px;
}

.project-board::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
}

.project-board::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 4px;
}

.project-board::-webkit-scrollbar-thumb:hover {
    background: #a1a1a1;
}

.project-column {
    min-width: 320px;
    flex: 0 0 320px;
    background: var(--ms-gray-10);
    border-radius: var(--ms-border-radius-l);
    padding: 1.5rem;
    border: 1px solid var(--ms-gray-30);
    max-height: 80vh;
    overflow-y: auto;
}

.project-column-header {
    margin-bottom: 1.5rem;
}

.column-title {
    font-size: 1.2rem;
    font-weight: 600;
    color: var(--ms-gray-120);
    margin: 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.column-count {
    background: var(--ms-blue);
    color: white;
    border-radius: 12px;
    padding: 0.2rem 0.6rem;
    font-size: 0.8rem;
    margin-left: auto;
}

.project-card {
    background: white;
    border: 1px solid var(--ms-gray-30);
    border-radius: var(--ms-border-radius-m);
    padding: 1.5rem;
    margin-bottom: 1rem;
    box-shadow: var(--ms-shadow-depth-4);
    transition: all 0.3s ease;
}

.project-card:hover {
    box-shadow: var(--ms-shadow-depth-8);
    transform: translateY(-2px);
}

.project-card-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;
}

.project-card-title {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--ms-gray-120);
    margin: 0;
    line-height: 1.3;
}

.status {
    padding: 0.25rem 0.5rem;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
}

.status-active {
    background: #d1edff;
    color: var(--ms-blue);
}

.status-planning {
    background: #fff3cd;
    color: #856404;
}

.status-onhold {
    background: #f8d7da;
    color: #721c24;
}

.status-done {
    background: #d1e7dd;
    color: var(--ms-green);
}

.project-card-meta {
    color: var(--ms-gray-90);
    font-size: 0.9rem;
    margin: 0.5rem 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.progress-bar {
    background: var(--ms-gray-30);
    border-radius: 10px;
    height: 6px;
    margin: 0.5rem 0;
    overflow: hidden;
}

.progress-fill {
    background: var(--ms-blue);
    height: 100%;
    transition: width 0.3s ease;
}

.team-members {
    display: flex;
    gap: 0.25rem;
    margin: 0.5rem 0;
}

.member-avatar {
    width: 28px;
    height: 28px;
    border-radius: 50%;
    background: var(--ms-blue);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.8rem;
    font-weight: 600;
}

.project-card-footer {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--ms-gray-30);
}

.button-group {
    display: flex;
    gap: 0.5rem;
}

.button {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: var(--ms-border-radius-m);
    font-size: 0.9rem;
    font-weight: 600;
    cursor: pointer;
    text-decoration: none;
    transition: all 0.2s ease;
    display: inline-flex;
    align-items: center;
    gap: 0.25rem;
}

.button-primary {
    background: var(--ms-blue);
    color: white;
}

.button-primary:hover {
    background: var(--ms-blue-hover);
    color: white;
}

.button-secondary {
    background: white;
    color: var(--ms-gray-120);
    border: 1px solid var(--ms-gray-60);
}

.button-secondary:hover {
    background: var(--ms-gray-20);
    color: var(--ms-gray-120);
}

.button-sm {
    padding: 0.375rem 0.75rem;
    font-size: 0.8rem;
}

/* List View Toggle */
.project-board.list-view {
    display: block;
    overflow: visible;
}

.project-board.list-view .project-column {
    min-width: 100%;
    flex: none;
    margin-bottom: 2rem;
}

.project-board.list-view .project-card {
    display: flex;
    align-items: center;
    padding: 1rem;
}

.project-board.list-view .project-card-header {
    margin: 0;
    flex: 1;
}

.project-board.list-view .project-card-body {
    flex: 2;
    margin: 0 1rem;
}

.project-board.list-view .project-card-footer {
    margin: 0;
    padding: 0;
    border: none;
}

/* Responsive Design */
@@media (max-width: 768px) {
    .project-page {
        padding: 1rem 0.5rem;
    }
    
    .project-header {
        flex-direction: column;
        gap: 1rem;
        align-items: stretch;
    }
    
    .project-actions {
        justify-content: center;
    }
    
    .project-board {
        gap: 1rem;
    }
    
    .project-column {
        min-width: 280px;
        flex: 0 0 280px;
    }
    
    .project-stats {
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
    }
}
</style>
