@using System.Security.Claims;
@model IEnumerable<OmintakProduction.Models.Project>;
@{
    ViewData["Title"] = "Projects";
    var phases = new[] { "Active", "OnHold", "Done", "Planning" };
}

<div class="project-page">
    <div class="project-header">
        <h2 class="project-title">
            <i class="fas fa-project-diagram"></i>
            Projects Overview
        </h2>
        <div class="project-actions">
            @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
            {
                <a asp-action="Create" class="button button-primary">
                    <i class="fas fa-plus"></i>
                    New Project
                </a>
            }
            <button type="button" class="button button-secondary" id="viewToggle">
                <i class="fas fa-th-list"></i>
                Toggle View
            </button>
        </div>
    </div>

    <div class="project-stats">
        <div class="stat-card">
            <div class="stat-value">@Model.Count(p => p.Status == "Active")</div>
            <div class="stat-label">Active Projects</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Count(p => p.Status == "Planning")</div>
            <div class="stat-label">In Planning</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Count(p => p.Status == "OnHold")</div>
            <div class="stat-label">On Hold</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Count(p => p.Status == "Done")</div>
            <div class="stat-label">Completed</div>
        </div>
    </div>

    <div class="project-board">
        @foreach (var phase in phases)
        {
            var projects = Model.Where(p => p.Status == phase);
            <div class="project-column">
                <div class="project-column-header">
                    <h3 class="column-title">
                        <i class="fas fa-@(phase.ToLower() switch {
                            "active" => "play-circle",
                            "onhold" => "pause-circle",
                            "done" => "check-circle",
                            "planning" => "clock",
                            _ => "circle"
                        })"></i>
                        @phase
                        <span class="column-count">@projects.Count()</span>
                    </h3>
                </div>
                
                @foreach (var project in projects)
                {
                    <div class="project-card">
                        <div class="project-card-header">
                            <h4 class="project-card-title">@project.ProjectName</h4>
                            <span class="status status-@project.Status.ToLower()">@project.Status</span>
                        </div>
                        
                        <div class="project-card-body">
                            <p class="project-card-meta">
                                <i class="fas fa-calendar"></i>
                                Started: @project.StartDate?.ToString("MMM dd, yyyy")
                            </p>
                            
                            @if (project.Tasks?.Any() == true)
                            {
                                var completedTasks = project.Tasks.Count(t => t.Status == OmintakProduction.Models.TaskStatus.Completed);
                                var totalTasks = project.Tasks.Count;
                                var progress = totalTasks > 0 ? (completedTasks * 100) / totalTasks : 0;
                                
                                <div class="progress-bar">
                                    <div class="progress-fill" style="width: @progress%"></div>
                                </div>
                                <p class="project-card-meta">
                                    <i class="fas fa-tasks"></i>
                                    @completedTasks / @totalTasks tasks complete
                                </p>
                            }

                            @if (project.Team?.TeamMembers?.Any() == true)
                            {
                                <div class="team-members">
                                    @foreach (var member in project.Team.TeamMembers.Take(3))
                                    {
                                        <div class="member-avatar" title="@member.UserName">
                                            @(member.UserName?[0])
                                        </div>
                                    }
                                    @if (project.Team.TeamMembers.Count > 3)
                                    {
                                        <div class="member-avatar">
                                            +@(project.Team.TeamMembers.Count - 3)
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                        
                        <div class="project-card-footer">
                            <div class="button-group">
                                <a asp-action="Details" asp-route-id="@project.ProjectId" class="button button-sm">View</a>
                                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                                {
                                    <a asp-action="Edit" asp-route-id="@project.ProjectId" class="button button-sm button-secondary">Edit</a>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const viewToggle = document.getElementById('viewToggle');
            const projectBoard = document.querySelector('.project-board');
            const viewPreference = localStorage.getItem('projectViewPreference') || 'grid';
            
            // Initialize view
            setView(viewPreference);
            
            viewToggle.addEventListener('click', function() {
                const currentView = projectBoard.classList.contains('list-view') ? 'grid' : 'list';
                setView(currentView);
                localStorage.setItem('projectViewPreference', currentView);
            });
            
            function setView(viewType) {
                if (viewType === 'list') {
                    projectBoard.classList.add('list-view');
                    viewToggle.querySelector('i').classList.remove('fa-th-list');
                    viewToggle.querySelector('i').classList.add('fa-th');
                } else {
                    projectBoard.classList.remove('list-view');
                    viewToggle.querySelector('i').classList.remove('fa-th');
                    viewToggle.querySelector('i').classList.add('fa-th-list');
                }
            }
        });
    </script>
}
@* <style>
    body {
        font-weight: 600;
        margin-bottom: 1.5rem;
        color: #fff;
        text-shadow: 0 2px 8px rgba(124, 58, 237, 0.10);
    }

    .kanban-card {
        background: #fff;
        color: #7c3aed;
        border-radius: 14px;
        box-shadow: 0 4px 16px 0 rgba(124, 58, 237, 0.10);
        margin-bottom: 1.2rem;
        padding: 1.5rem;
        transition: box-shadow 0.2s, transform 0.2s;
        border: none;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        min-width: 220px;
        width: 100%;
    }

    .kanban-card:hover {
        box-shadow: 0 8px 32px 0 rgba(124, 58, 237, 0.18);
        transform: translateY(-2px) scale(1.01);
    }

    .kanban-card .project-title {
        font-weight: 600;
        font-size: 1.1rem;
        color: #7c3aed;
        margin: 0;
        line-height: 1.3;
    }

    .kanban-card .project-desc {
        color: #6b21a8;
        font-size: 0.95rem;
        line-height: 1.5;
        margin: 0;
        flex-grow: 1;
    }

    .kanban-card .kanban-actions {
        display: flex;
        gap: 0.5rem;
        flex-wrap: nowrap;
        margin-top: auto;
        padding-top: 0.5rem;
        border-top: 1px solid rgba(124, 58, 237, 0.08);
        justify-content: flex-start;
    }

    .kanban-card .kanban-actions .btn {
        border-radius: 8px;
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
        transition: all 0.2s;
        flex: 1;
        min-width: 60px;
        text-align: center;
    }

    .kanban-card .kanban-actions .btn:hover {
        transform: translateY(-1px);
    }

    .kanban-card span {
        background: #4462b0;
    }
</style> *@
<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="work-item-title">
        <i class="fas fa-project-diagram text-primary me-2"></i>Projects
    </h2>
    @if (User.FindFirst(ClaimTypes.Role)?.Value == "SystemAdmin")
    {
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Create New Project
        </a>
    }
</div>
<div class="kanban-board">
    @foreach (var phase in phases)
    {
        <div class="kanban-column">
            <div class="kanban-column-title">@phase</div>
            @foreach (var project in Model?.Where(p => (p.Status ?? "Planning") == phase) ?? Enumerable.Empty<OmintakProduction.Models.Project>())
            {
                <div class="kanban-card mb-3">
                    <div class="project-title">@project.ProjectName</div>
                    <div class="project-desc mb-2">@project.Description</div>
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="badge text-purple">#@project.ProjectId</span>
                        <div class="kanban-actions">
                            <a asp-controller="Project" asp-action="Update" asp-route-id="@project.ProjectId" class="btn btn-sm btn-primary"><i class="fas fa-edit me-1"></i>Update</a>
                            <a asp-controller="Project" asp-action="Delete" asp-route-id="@project.ProjectId" class="btn btn-sm btn-outline-danger"><i class="fas fa-trash me-1"></i>Delete</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
