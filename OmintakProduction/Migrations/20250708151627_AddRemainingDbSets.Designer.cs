// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OmintakProduction.Data;

#nullable disable

namespace OmintakProduction.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250708151627_AddRemainingDbSets")]
    partial class AddRemainingDbSets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OmintakProduction.Models.Attachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttachmentId"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UploadedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AttachmentId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("OmintakProduction.Models.BugReport", b =>
                {
                    b.Property<int>("BugReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BugReportId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("ReportDate")
                        .HasColumnType("date");

                    b.Property<string>("ReportedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("BugReportId");

                    b.ToTable("BugReport");
                });

            modelBuilder.Entity("OmintakProduction.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateOnly>("DateSent")
                        .HasColumnType("date");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("OmintakProduction.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            ProjectId = 4,
                            Description = "This is a sample ticket description.",
                            DueDate = new DateOnly(2025, 6, 26),
                            ProjectName = "Sample Ticket",
                            Status = "Done"
                        });
                });

            modelBuilder.Entity("OmintakProduction.Models.ProjectReport", b =>
                {
                    b.Property<int>("ProjectReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectReportId"));

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneratedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectReportId");

                    b.ToTable("ProjectReport");
                });

            modelBuilder.Entity("OmintakProduction.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "SystemAdmin",
                            UserId = 1
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Engineer",
                            UserId = 2
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Software Tester",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("OmintakProduction.Models.TaskAssignment", b =>
                {
                    b.Property<int>("TaskAssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskAssignmentId"));

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TaskAssignmentId");

                    b.ToTable("TaskAssignment");
                });

            modelBuilder.Entity("OmintakProduction.Models.TaskComment", b =>
                {
                    b.Property<int>("TaskCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskCommentId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TaskCommentId");

                    b.ToTable("TaskComment");
                });

            modelBuilder.Entity("OmintakProduction.Models.TaskHistory", b =>
                {
                    b.Property<int>("TaskHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskHistoryId"));

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChangeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChangedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("FieldChanged")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewValue")
                        .HasColumnType("int");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("TaskHistoryId");

                    b.ToTable("TaskHistory");
                });

            modelBuilder.Entity("OmintakProduction.Models.TaskItem", b =>
                {
                    b.Property<int>("TaskItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskItemId"));

                    b.Property<string>("AssignedToUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskItemId");

                    b.ToTable("TaskItem");
                });

            modelBuilder.Entity("OmintakProduction.Models.TestReport", b =>
                {
                    b.Property<int>("TestReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestReportId"));

                    b.Property<int>("BugId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneratedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("TestReportId");

                    b.ToTable("TestReport");
                });

            modelBuilder.Entity("OmintakProduction.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssignedToUserId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("CompletedAt")
                        .HasColumnType("date");

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DueDate")
                        .HasColumnType("date");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ticket");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompletedAt = new DateOnly(2025, 6, 26),
                            CreatedAt = new DateOnly(2025, 6, 26),
                            Description = "This is a sample ticket description.",
                            DueDate = new DateOnly(2025, 6, 26),
                            Status = "ToDo",
                            Title = "Sample Ticket"
                        },
                        new
                        {
                            Id = 2,
                            CompletedAt = new DateOnly(2025, 6, 26),
                            CreatedAt = new DateOnly(2025, 6, 26),
                            Description = "This is a sample ticket description.",
                            DueDate = new DateOnly(2025, 6, 26),
                            Status = "In_Progress",
                            Title = "Sample Ticket"
                        },
                        new
                        {
                            Id = 3,
                            CompletedAt = new DateOnly(2025, 6, 26),
                            CreatedAt = new DateOnly(2025, 6, 26),
                            Description = "This is a sample ticket description.",
                            DueDate = new DateOnly(2025, 6, 26),
                            Status = "In_Review",
                            Title = "Sample Ticket"
                        },
                        new
                        {
                            Id = 4,
                            CompletedAt = new DateOnly(2025, 6, 26),
                            CreatedAt = new DateOnly(2025, 6, 26),
                            Description = "This is a sample ticket description.",
                            DueDate = new DateOnly(2025, 6, 26),
                            Status = "Done",
                            Title = "Sample Ticket"
                        });
                });

            modelBuilder.Entity("OmintakProduction.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NeedsWelcome")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedDate = new DateOnly(2025, 6, 26),
                            Email = "Admin1.seededData@omnitak.com",
                            NeedsWelcome = true,
                            Password = "Admin@123",
                            RoleId = 1,
                            UserName = "AdminUser",
                            isActive = true
                        },
                        new
                        {
                            UserId = 2,
                            CreatedDate = new DateOnly(2025, 6, 26),
                            Email = "Admin2.seededData@omnitak.com",
                            NeedsWelcome = true,
                            Password = "Admin@123",
                            RoleId = 1,
                            UserName = "AdminUser2",
                            isActive = true
                        },
                        new
                        {
                            UserId = 3,
                            CreatedDate = new DateOnly(2025, 6, 26),
                            Email = "Engineer1.seededData@omnitak.com",
                            NeedsWelcome = true,
                            Password = "Engineer@123",
                            RoleId = 2,
                            UserName = "EngineerUser1",
                            isActive = true
                        },
                        new
                        {
                            UserId = 4,
                            CreatedDate = new DateOnly(2025, 6, 26),
                            Email = "Engineer2.seededData@omnitak.com",
                            NeedsWelcome = true,
                            Password = "Engineer@123",
                            RoleId = 2,
                            UserName = "EngineerUser2",
                            isActive = true
                        },
                        new
                        {
                            UserId = 5,
                            CreatedDate = new DateOnly(2025, 6, 26),
                            Email = "Tester1.seededData@omnitak.com",
                            NeedsWelcome = true,
                            Password = "Tester@123",
                            RoleId = 3,
                            UserName = "TesterUser1",
                            isActive = true
                        },
                        new
                        {
                            UserId = 6,
                            CreatedDate = new DateOnly(2025, 6, 26),
                            Email = "Tester2.seededData@omnitak.com",
                            NeedsWelcome = true,
                            Password = "Tester@123",
                            RoleId = 3,
                            UserName = "TesterUser2",
                            isActive = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
